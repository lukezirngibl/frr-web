"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var remote_data_1 = require("./remote-data");
var Applicative_1 = require("fp-ts/lib/Applicative");
function getRemoteDataM(M) {
    var A = Applicative_1.getApplicativeComposition(M, remote_data_1.remoteData);
    return tslib_1.__assign({}, A, { chain: function (fa, f) { return M.chain(fa, function (a) { return (a._tag === 'RemoteSuccess' ? f(a.value) : M.of(a)); }); }, alt: function (fa, f) { return M.chain(fa, function (a) { return (a._tag === 'RemoteSuccess' ? A.of(a.value) : f()); }); }, bimap: function (fa, f, g) { return M.map(fa, function (a) { return remote_data_1.remoteData.bimap(a, f, g); }); }, mapLeft: function (ma, f) { return M.map(ma, function (a) { return remote_data_1.remoteData.mapLeft(a, f); }); }, fold: function (ma, onInitial, onPending, onFailure, onSuccess) {
            return M.chain(ma, remote_data_1.fold(onInitial, onPending, onFailure, onSuccess));
        }, getOrElse: function (ma, a) { return M.chain(ma, remote_data_1.fold(a, a, a, M.of)); }, orElse: function (ma, f) { return M.chain(ma, remote_data_1.fold(f, f, f, function (a) { return A.of(a); })); }, initial: M.of(remote_data_1.initial), pending: M.of(remote_data_1.pending), progress: function (p) { return M.of(remote_data_1.progress(p)); }, progressM: function (mp) { return M.map(mp, remote_data_1.progress); }, failure: function (e) { return M.of(remote_data_1.failure(e)); }, failureM: function (me) { return M.map(me, remote_data_1.failure); }, fromM: function (ma) { return M.map(ma, remote_data_1.success); }, fromOption: function (a, e) { return M.of(remote_data_1.fromOption(a, e)); } });
}
exports.getRemoteDataM = getRemoteDataM;
