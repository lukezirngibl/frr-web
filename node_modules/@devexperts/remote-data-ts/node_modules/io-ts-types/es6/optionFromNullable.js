/**
 * @since 0.5.0
 */
import { either } from 'fp-ts/es6/Either';
import { none, option, some, toNullable } from 'fp-ts/es6/Option';
import * as t from 'io-ts';
import { option as o } from './option';
/**
 * @since 0.5.0
 */
export function optionFromNullable(codec, name) {
    if (name === void 0) { name = "Option<" + codec.name + ">"; }
    return new t.Type(name, o(codec).is, function (u, c) { return (u == null ? t.success(none) : either.map(codec.validate(u, c), some)); }, function (a) { return toNullable(option.map(a, codec.encode)); });
}
