"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntFromString = void 0;
/**
 * @since 0.4.4
 */
var t = require("io-ts");
var NumberFromString_1 = require("./NumberFromString");
var Either_1 = require("fp-ts/lib/Either");
/**
 * A codec that succeeds if a string can be parsed to an integer
 *
 * @example
 * import { IntFromString } from 'io-ts-types/lib/IntFromString'
 * import { right } from 'fp-ts/lib/Either'
 * import { PathReporter } from 'io-ts/lib/PathReporter'
 *
 * assert.deepStrictEqual(IntFromString.decode('1'), right(1))
 * assert.deepStrictEqual(PathReporter.report(IntFromString.decode('1.1')), ['Invalid value "1.1" supplied to : IntFromString'])
 *
 * @since 0.4.4
 */
exports.IntFromString = new t.Type('IntFromString', t.Int.is, function (u, c) { return Either_1.either.chain(NumberFromString_1.NumberFromString.validate(u, c), function (n) { return (t.Int.is(n) ? t.success(n) : t.failure(u, c)); }); }, NumberFromString_1.NumberFromString.encode);
